[gd_resource type="SpatialMaterial" load_steps=3 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : hint_color;
uniform float outline_width = 8.0;

void vertex() {
    vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
    vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);

    vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;

    clip_position.xy += offset;

    POSITION = clip_position;
}

void fragment() {
    ALBEDO = outline_color.rgb;
    if(outline_color.a < 1.0) {
        ALPHA = outline_color.a;
    }
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/outline_color = Color( 1, 0.960784, 0, 1 )
shader_param/outline_width = 1.0

[resource]
resource_local_to_scene = true
next_pass = SubResource( 2 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 1, 0.847059, 0.721569, 1 )
roughness = 0.0
